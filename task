#!/bin/bash

function Task:build,fltk {
    mkdir -p tmp/fltk
    LDFLAGS="--static" cmake -G "MSYS Makefiles" -DOPTION_USE_SYSTEM_ZLIB=OFF -DOPTION_USE_SYSTEM_LIBJPEG=OFF -DOPTION_USE_SYSTEM_LIBPNG=OFF -S fltk -B tmp/fltk
    make -C tmp/fltk --jobs=10
}
function Task:build,app {
    [ -f "tmp/vrcls/build.ninja" ] || meson setup tmp/vrcls
    meson compile -C tmp/vrcls -v
}
function Task:VerifyEnv {
    [ "$(which meson)" = "/mingw64/bin/meson" ] || echo "meson missing" || exit 1
    [ "$(which ninja)" = "/mingw64/bin/ninja" ] || echo "ninja missing" || exit 1
    [ "$(which g++)" = "/mingw64/bin/g++" ]     || echo "g++ missing"   || exit 1
    [ -f "/msys2.ini" ] || echo "Not an msys2 environment!" || exit 1
}
function Task:build {
    Task:VerifyEnv
    [ -f "tmp/fltk/lib/libfltk.a" ] || Task:build,fltk # fltk is static and does not need rebuilding if it exists.
    Task:build,app && doNextTask ${@}
}
function Task:run {
    tmp/vrcls/vrcls.exe
    doNextTask ${@}
}
function Task:deepclean
{
    rm -r tmp
}
function Task:clean {
    rm -r tmp/vrcls
    doNextTask ${@}
}
function Task:loop {
    function ctrl_c {
        loopctrl=0
        echo "ctrl-c pressed..."
    }
    trap ctrl_c INT
    loopctrl=1
    while [ "${loopctrl}" = "1" ]; do
        doNextTask ${@}
        [ "$?" != "0" ] && loopctrl=0 && exit 1
    done
}

function Task:default {
    echo errr....
}

function doNextTask {
    if [ "$#" != "0" ]; then
        Task:${@}
    fi
}

time Task:${@:-default}